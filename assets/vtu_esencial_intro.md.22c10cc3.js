import{_ as s,c as a,o as n,O as e}from"./chunks/framework.8d330141.js";const d=JSON.parse('{"title":"¿Qué es Vue Test Utils?","description":"","frontmatter":{},"headers":[],"relativePath":"vtu/esencial/intro.md"}'),o={name:"vtu/esencial/intro.md"},l=e(`<h1 id="¿que-es-vue-test-utils" tabindex="-1">¿Qué es Vue Test Utils? <a class="header-anchor" href="#¿que-es-vue-test-utils" aria-label="Permalink to &quot;¿Qué es Vue Test Utils?&quot;">​</a></h1><p>Vue Test Utils (VTU), ¡la biblioteca oficial de utilidades de prueba para Vue.js! Es un conjunto de funciones de utilidad destinadas a simplificar las pruebas de los componentes de Vue.js. Proporciona algunos métodos para montar e interactuar con los componentes de Vue de forma aislada.</p><p>Veamos un ejemplo:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mount</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@vue/test-utils</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// The component to test</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> MessageComponent </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;p&gt;{{ msg }}&lt;/p&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">displays message</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">wrapper</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">mount</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">MessageComponent</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    props</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      msg</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello world</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Assert the rendered text of the component</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">expect</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">wrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">text</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toContain</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="¿-que-aprenderemos-aqui" tabindex="-1">¿ Qué aprenderemos aquí ? <a class="header-anchor" href="#¿-que-aprenderemos-aqui" aria-label="Permalink to &quot;¿ Qué aprenderemos aquí ?&quot;">​</a></h2><p>Aquí hay una colección de ejemplos breves y enfocados en cómo probar los componentes de Vue. Utiliza vue-test-utils, la biblioteca oficial para probar los componentes de Vue, y Vitest, un marco de prueba moderno. Cubre la API vue-test-utils, así como las mejores prácticas para probar componentes.</p><p>Cada sección es independiente de las demás. Comenzamos a escribir una prueba simple. A continuación, se analizan dos formas de renderizar un componente: montar y montaje superficial. Las diferencias serán demostradas y explicadas.</p><p>De ahí en adelante, cubriremos cómo probar varios escenarios que surgen al probar componentes, como probar componentes que:</p><ul><li>Reciben accesorios</li><li>Usan propiedades calculadas</li><li>Renderizan otros componentes</li><li>Emiten eventos</li></ul><p>Y así sucesivamente. Luego pasamos a casos más interesantes, como:</p><ul><li>Mejores prácticas para probar Vuex (en componentes e independientemente)</li><li>Probando el enrutador Vue</li><li>Pruebas con componentes de terceros</li></ul><p>También exploraremos cómo usar la API de Vitest para hacer que nuestras pruebas sean más sólidas, como por ejemplo:</p><ul><li>Burlarse de las respuestas de la API</li><li>Burlarse y espiar módulos</li><li>Uso de instantáneas</li></ul>`,13),p=[l];function t(r,c,i,y,F,D){return n(),a("div",null,p)}const m=s(o,[["render",t]]);export{d as __pageData,m as default};
